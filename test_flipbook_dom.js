/**
 * –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ FlipBook —Å —ç–º—É–ª—è—Ü–∏–µ–π –±—Ä–∞—É–∑–µ—Ä–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã FlipBook
 */

const http = require('http');
const { JSDOM } = require('jsdom');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–∞
function httpGet(url) {
    return new Promise((resolve, reject) => {
        http.get(url, (res) => {
            let data = '';
            res.on('data', chunk => data += chunk);
            res.on('end', () => resolve(data));
        }).on('error', reject);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏
function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}

async function testFlipBookDOM() {
    console.log('üîç –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ FlipBook —Å DOM –∞–Ω–∞–ª–∏–∑–æ–º...\n');
    
    const baseUrl = 'http://localhost:8002';
    let passed = 0;
    let failed = 0;
    
    try {
        // –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∂–∞–µ–º flipbook.html
        console.log('üì± –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ FlipBook HTML');
        const flipbookHtml = await httpGet(`${baseUrl}/flipbook.html`);
        const dom = new JSDOM(flipbookHtml, {
            url: baseUrl,
            runScripts: 'outside-only',
            resources: 'usable'
        });
        const document = dom.window.document;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        const flipbookContainer = document.querySelector('#flipbook');
        if (flipbookContainer) {
            console.log('   ‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #flipbook –Ω–∞–π–¥–µ–Ω');
            passed++;
        } else {
            console.log('   ‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #flipbook –ù–ï –Ω–∞–π–¥–µ–Ω!');
            failed++;
            return;
        }
        
        // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü
        console.log('\nüìÑ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü');
        const pages = document.querySelectorAll('.page');
        console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü –≤ HTML: ${pages.length}`);
        
        if (pages.length === 0) {
            console.log('   ‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ JS');
            console.log('   üí° –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...');
            
            const scripts = document.querySelectorAll('script[src*="flipbook.js"]');
            if (scripts.length > 0) {
                console.log('   ‚úÖ flipbook.js –ø–æ–¥–∫–ª—é—á–µ–Ω');
                passed++;
            } else {
                console.log('   ‚ùå flipbook.js –ù–ï –ø–æ–¥–∫–ª—é—á–µ–Ω!');
                failed++;
            }
        } else {
            console.log('   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞–π–¥–µ–Ω—ã –≤ HTML');
            passed++;
        }
        
        // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º flipbook.js –ª–æ–≥–∏–∫—É
        console.log('\n‚öôÔ∏è –¢–µ—Å—Ç 3: –ê–Ω–∞–ª–∏–∑ flipbook.js');
        const flipbookJs = await httpGet(`${baseUrl}/flipbook.js`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        const checks = [
            { name: '–ö–ª–∞—Å—Å FlipBookController', pattern: /class FlipBookController/ },
            { name: '–§—É–Ω–∫—Ü–∏—è loadSlides()', pattern: /async loadSlides\(\)/ },
            { name: '–§—É–Ω–∫—Ü–∏—è loadIndexHTML()', pattern: /async loadIndexHTML\(\)/ },
            { name: '–§—É–Ω–∫—Ü–∏—è loadPageContent()', pattern: /loadPageContent\(pageNum\)/ },
            { name: 'DOMParser –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞', pattern: /new DOMParser\(\)/ },
            { name: '–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ cloneNode', pattern: /cloneNode\(true\)/ },
            { name: '–ü–æ–∏—Å–∫ –ø–æ getElementById', pattern: /getElementById\(`slide\$\{/ },
            { name: '–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã 1', pattern: /this\.loadPageContent\(1\)/ },
            { name: '–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã 2', pattern: /this\.loadPageContent\(2\)/ },
            { name: '–ó–∞–≥—Ä—É–∑–∫–∞ –≤ —Å–æ–±—ã—Ç–∏–∏ turned', pattern: /turned:.*this\.loadPageContent/ }
        ];
        
        checks.forEach(check => {
            if (check.pattern.test(flipbookJs)) {
                console.log(`   ‚úÖ ${check.name}`);
                passed++;
            } else {
                console.log(`   ‚ùå ${check.name} - –ù–ï –ù–ê–ô–î–ï–ù–û!`);
                failed++;
            }
        });
        
        // –¢–µ—Å—Ç 4: –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É loadPageContent
        console.log('\nüîÑ –¢–µ—Å—Ç 4: –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º index.html
        const indexHtml = await httpGet(`${baseUrl}/index.html`);
        const indexDom = new JSDOM(indexHtml);
        const indexDocument = indexDom.window.document;
        
        console.log('   üì• index.html –∑–∞–≥—Ä—É–∂–µ–Ω');
        
        // –ò—â–µ–º —Å–ª–∞–π–¥—ã
        for (let i = 1; i <= 3; i++) {
            const slideId = `slide${i}`;
            const slideElement = indexDocument.getElementById(slideId);
            
            if (slideElement) {
                console.log(`   ‚úÖ –°–ª–∞–π–¥ #${i} –Ω–∞–π–¥–µ–Ω (id="${slideId}")`);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
                const textBlocks = slideElement.querySelectorAll('.text-block');
                const imageBlocks = slideElement.querySelectorAll('.image-block');
                console.log(`      ‚îî‚îÄ –¢–µ–∫—Å—Ç–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤: ${textBlocks.length}`);
                console.log(`      ‚îî‚îÄ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${imageBlocks.length}`);
                
                // –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
                const cloned = slideElement.cloneNode(true);
                if (cloned.id === slideId) {
                    console.log(`      ‚úÖ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç`);
                    passed++;
                } else {
                    console.log(`      ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º!`);
                    failed++;
                }
            } else {
                console.log(`   ‚ùå –°–ª–∞–π–¥ #${i} –ù–ï –ù–ê–ô–î–ï–ù! (–∏—Å–∫–∞–ª–∏ id="${slideId}")`);
                failed++;
            }
        }
        
        // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º metadata.json —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
        console.log('\nüìã –¢–µ—Å—Ç 5: –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ metadata.json –∏ index.html');
        const metadataJson = await httpGet(`${baseUrl}/metadata.json`);
        const metadata = JSON.parse(metadataJson);
        
        console.log(`   üìä –í metadata.json: ${metadata.total_slides} —Å–ª–∞–π–¥–æ–≤`);
        
        let foundSlides = 0;
        for (let i = 1; i <= metadata.total_slides; i++) {
            const slideId = `slide${i}`;
            const slideElement = indexDocument.getElementById(slideId);
            if (slideElement) {
                foundSlides++;
            }
        }
        
        console.log(`   üìä –í index.html –Ω–∞–π–¥–µ–Ω–æ: ${foundSlides} —Å–ª–∞–π–¥–æ–≤`);
        
        if (foundSlides === metadata.total_slides) {
            console.log(`   ‚úÖ –í—Å–µ —Å–ª–∞–π–¥—ã –Ω–∞ –º–µ—Å—Ç–µ!`);
            passed++;
        } else {
            console.log(`   ‚ùå –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ! –û–∂–∏–¥–∞–ª–æ—Å—å ${metadata.total_slides}, –Ω–∞–π–¥–µ–Ω–æ ${foundSlides}`);
            failed++;
        }
        
        // –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ flipbook.js —Å–æ–∑–¥–∞—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ page-content
        console.log('\nüì¶ –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü');
        
        // –≠–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –∫–∞–∫ –≤ flipbook.js
        const slideCount = metadata.total_slides;
        console.log(`   üî® –≠–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ ${slideCount} —Å—Ç—Ä–∞–Ω–∏—Ü...`);
        
        for (let i = 1; i <= Math.min(3, slideCount); i++) {
            const slideData = metadata.slides[i - 1];
            console.log(`\n   üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${i}:`);
            console.log(`      ‚îî‚îÄ slide_num: ${slideData.slide_num}`);
            console.log(`      ‚îî‚îÄ html_url: ${slideData.html_url || '–ù–ï –£–ö–ê–ó–ê–ù'}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –Ω–∞–π—Ç–∏ —Å–ª–∞–π–¥
            const slideElement = indexDocument.getElementById(`slide${i}`);
            if (slideElement) {
                console.log(`      ‚úÖ –°–ª–∞–π–¥ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω`);
                
                // –≠–º—É–ª–∏—Ä—É–µ–º —Ç–æ, —á—Ç–æ –¥–µ–ª–∞–µ—Ç loadPageContent
                const cloned = slideElement.cloneNode(true);
                cloned.style.display = 'block';
                cloned.style.width = '100%';
                cloned.style.height = '100%';
                
                console.log(`      ‚úÖ –≠–º—É–ª—è—Ü–∏—è loadPageContent —É—Å–ø–µ—à–Ω–∞`);
                passed++;
            } else {
                console.log(`      ‚ùå –°–ª–∞–π–¥ –ù–ï –ù–ê–ô–î–ï–ù! loadPageContent –ø—Ä–æ–≤–∞–ª–∏—Ç—Å—è!`);
                failed++;
            }
        }
        
        // –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä—è–µ–º CSS –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü
        console.log('\nüé® –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª–µ–π');
        const styleCss = await httpGet(`${baseUrl}/style.css`);
        
        const cssChecks = [
            { name: '–ö–ª–∞—Å—Å .slide', pattern: /\.slide\s*{/ },
            { name: '–ö–ª–∞—Å—Å .text-block', pattern: /\.text-block\s*{/ },
            { name: '–ö–ª–∞—Å—Å .image-block', pattern: /\.image-block\s*{/ }
        ];
        
        cssChecks.forEach(check => {
            if (check.pattern.test(styleCss)) {
                console.log(`   ‚úÖ ${check.name} –æ–ø—Ä–µ–¥–µ–ª–µ–Ω`);
                passed++;
            } else {
                console.log(`   ‚ö†Ô∏è ${check.name} –Ω–µ –Ω–∞–π–¥–µ–Ω (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ)`);
            }
        });
        
    } catch (error) {
        console.error(`\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
        console.error(error.stack);
        failed++;
    }
    
    // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
    console.log('\n' + '='.repeat(70));
    console.log(`üìä –î–ï–¢–ê–õ–¨–ù–´–ô –û–¢–ß–Å–¢ –û –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–û–°–¢–ò FLIPBOOK`);
    console.log('='.repeat(70));
    console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: ${passed}`);
    console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: ${failed}`);
    console.log(`üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${Math.round(passed / (passed + failed) * 100)}%`);
    console.log('='.repeat(70));
    
    if (failed === 0) {
        console.log('\nüéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!');
        console.log('\n‚ú® FlipBook –¥–æ–ª–∂–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å:');
        console.log('   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏');
        console.log('   ‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–∑ index.html');
        console.log('   ‚úÖ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ DOM —Ä–∞–±–æ—Ç–∞–µ—Ç');
        console.log('   ‚úÖ –í—Å–µ —Å–ª–∞–π–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã');
        console.log('\nüìù –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏:');
        console.log('   üåê http://localhost:8002/flipbook.html');
        console.log('\nüîç –í –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:');
        console.log('   window.flipbook.indexDocument  // –î–æ–ª–∂–µ–Ω –±—ã—Ç—å Document');
        console.log('   window.flipbook.slides.length  // –î–æ–ª–∂–Ω–æ –±—ã—Ç—å 12');
    } else {
        console.log('\n‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!');
        console.log('\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        console.log('   1. flipbook.js –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç index.html –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
        console.log('   2. ID —Å–ª–∞–π–¥–æ–≤ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç (slide1 vs slide-1)');
        console.log('   3. –°–æ–±—ã—Ç–∏—è Turn.js –Ω–µ –≤—ã–∑—ã–≤–∞—é—Ç loadPageContent');
        console.log('   4. CSS –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å–∫—Ä—ã–≤–∞—é—Ç –∫–æ–Ω—Ç–µ–Ω—Ç');
        console.log('\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫!');
    }
    
    console.log('\n');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ jsdom
try {
    require('jsdom');
} catch (err) {
    console.error('‚ùå –ú–æ–¥—É–ª—å jsdom –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
    console.error('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π: npm install jsdom');
    process.exit(1);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testFlipBookDOM().catch(err => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', err);
    process.exit(1);
});
