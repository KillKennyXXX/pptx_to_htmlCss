#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ z-order –≤ PPTX
–ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫ PowerPoint –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ –Ω–∞–ª–æ–∂–µ–Ω–∏—è —Ñ–∏–≥—É—Ä
"""

from pptx import Presentation
from pptx.enum.shapes import MSO_SHAPE_TYPE

def analyze_shape_order(shape, index, slide_width, slide_height, level=0):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —Ñ–∏–≥—É—Ä—ã –≤ XML"""
    indent = "  " * level
    
    left_pct = (shape.left / slide_width) * 100
    top_pct = (shape.top / slide_height) * 100
    
    shape_type = MSO_SHAPE_TYPE(shape.shape_type).name
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å z-order –∏–∑ XML
    z_order = None
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ç—Ä–∏–±—É—Ç –≤ XML
        elem = shape._element
        # –ò—â–µ–º –∞—Ç—Ä–∏–±—É—Ç order –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π
        if hasattr(elem, 'attrib'):
            z_order = elem.attrib.get('order', None)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ z-order
        if not z_order and hasattr(elem, 'get'):
            z_order = elem.get('order', None)
    except:
        pass
    
    print(f"{indent}#{index}: {shape.name} ({shape_type})")
    print(f"{indent}   Position: left={left_pct:.1f}%, top={top_pct:.1f}%")
    print(f"{indent}   Order in shapes: {index}")
    print(f"{indent}   Z-order from XML: {z_order if z_order else 'N/A'}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç
    has_text = False
    if hasattr(shape, 'text'):
        try:
            if shape.text.strip():
                has_text = True
                print(f"{indent}   Has text: YES ({shape.text[:30]}...)")
        except:
            pass
    
    if not has_text:
        print(f"{indent}   Has text: NO")
    
    return {
        'index': index,
        'name': shape.name,
        'type': shape_type,
        'left': left_pct,
        'top': top_pct,
        'xml_order': z_order,
        'has_text': has_text
    }

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
prs = Presentation('NEO INVESTMENTS-fin.pptx')

print("=" * 70)
print("–ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï Z-ORDER –í PPTX")
print("=" * 70)

slide_width = prs.slide_width
slide_height = prs.slide_height

for slide_num in [8, 10]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–∞–π–¥—ã 8 –∏ 10
    slide = prs.slides[slide_num - 1]
    
    print(f"\n{'='*70}")
    print(f"–°–õ–ê–ô–î #{slide_num}")
    print(f"{'='*70}")
    print(f"–í—Å–µ–≥–æ —Ñ–∏–≥—É—Ä: {len(slide.shapes)}")
    
    all_shapes = []
    
    for i, shape in enumerate(slide.shapes, 1):
        print()
        if shape.shape_type == MSO_SHAPE_TYPE.GROUP:
            result = analyze_shape_order(shape, i, slide_width, slide_height, 0)
            all_shapes.append(result)
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥—Ä—É–ø–ø—ã
            print(f"   GROUP contains {len(shape.shapes)} shapes:")
            for j, sub_shape in enumerate(shape.shapes, 1):
                print()
                sub_result = analyze_shape_order(sub_shape, f"{i}.{j}", slide_width, slide_height, 1)
                all_shapes.append(sub_result)
        else:
            result = analyze_shape_order(shape, i, slide_width, slide_height, 0)
            all_shapes.append(result)
    
    print(f"\n{'='*70}")
    print(f"–í–´–í–û–î –î–õ–Ø –°–õ–ê–ô–î–ê {slide_num}:")
    print(f"{'='*70}")
    print("\nüí° –í–ê–ñ–ù–û: –ü–æ—Ä—è–¥–æ–∫ —Ñ–∏–≥—É—Ä –≤ slide.shapes –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç z-order!")
    print("   - –§–∏–≥—É—Ä—ã –≤ –Ω–∞—á–∞–ª–µ —Å–ø–∏—Å–∫–∞ (–∏–Ω–¥–µ–∫—Å 1, 2, 3...) –Ω–∞ –ó–ê–î–ù–ï–ú –ø–ª–∞–Ω–µ")
    print("   - –§–∏–≥—É—Ä—ã –≤ –∫–æ–Ω—Ü–µ —Å–ø–∏—Å–∫–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ) –Ω–∞ –ü–ï–†–ï–î–ù–ï–ú –ø–ª–∞–Ω–µ")
    print("\nüìä –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω–¥–µ–∫—Å –≤ slide.shapes –∫–∞–∫ –±–∞–∑—É –¥–ª—è z-index")

print("\n" + "=" * 70)
print("–û–ë–©–ò–ô –í–´–í–û–î:")
print("=" * 70)
print("""
–í PowerPoint –ø–æ—Ä—è–¥–æ–∫ –Ω–∞–ª–æ–∂–µ–Ω–∏—è —Ñ–∏–≥—É—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∏—Ö –ø–æ–∑–∏—Ü–∏–µ–π –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ shapes:
1. –ü–µ—Ä–≤–∞—è —Ñ–∏–≥—É—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ (shapes[0]) - —Å–∞–º–∞—è –∑–∞–¥–Ω—è—è (z-index = 1)
2. –ü–æ—Å–ª–µ–¥–Ω—è—è —Ñ–∏–≥—É—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ (shapes[-1]) - —Å–∞–º–∞—è –ø–µ—Ä–µ–¥–Ω—è—è (z-index = max)

–î–ª—è –≥—Ä—É–ø–ø:
- –ì—Ä—É–ø–ø–∞ –∏–º–µ–µ—Ç —Å–≤–æ–π z-index –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –¥—Ä—É–≥–∏—Ö —Ñ–∏–≥—É—Ä –Ω–∞ —Å–ª–∞–π–¥–µ
- –í–Ω—É—Ç—Ä–∏ –≥—Ä—É–ø–ø—ã —Ñ–∏–≥—É—Ä—ã —Ç–∞–∫–∂–µ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω—ã (–ø–µ—Ä–≤–∞—è = –∑–∞–¥–Ω—è—è, –ø–æ—Å–ª–µ–¥–Ω—è—è = –ø–µ—Ä–µ–¥–Ω—è—è)

–ü–†–ê–í–ò–õ–¨–ù–ê–Ø –§–û–†–ú–£–õ–ê Z-INDEX:
z-index = shape_index (–ø–æ—Ä—è–¥–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ slide.shapes)

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ —É—á–µ—Å—Ç—å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏:
z-index = shape_index * 10 + int(top_percent)
""")
